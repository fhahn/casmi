CASM conversions

enum en = {e1, e2, e3}
enum en2 = {e2_1, e2_2}

init main

rule main = {
	assert Boolean2Int(true) = 1
	assert Boolean2Int(false) = 0
	assert Int2Boolean(1) = true
	assert Int2Boolean(0) = false
	assert Int2Boolean(-1) = true
	assert Int2Boolean(42) = true

	assert Enum2Int(e1) = 0
	assert Enum2Int(e2) = 1
	assert Enum2Int(e3) = 2
	assert Enum2Int(undef) = undef
	let e:en = undef in assert Enum2Int(e) = undef

	assert Enum2Int(e2_1) = 0
	assert Enum2Int(e2_2) = 1

	let e:en = Int2Enum(0) in assert e = e1
	let e:en = Int2Enum(1) in assert e = e2
	let e:en = Int2Enum(2) in assert e = e3
	let e:en = Int2Enum(3) in assert e = undef
	let e:en = Int2Enum(4) in assert e = undef

	let e:en2 = Int2Enum(0) in assert e = e2_1
	let e:en2 = Int2Enum(1) in assert e = e2_2
	let e:en2 = Int2Enum(2) in assert e = undef

	program(self) := undef
}
