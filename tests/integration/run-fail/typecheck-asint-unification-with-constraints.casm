CASM foo

init main

enum my_e = { e1 }


rule main = {
    let x: List(Int) = [1,2,3] in print asInt(x)
        //~^ type of 1 argument of `asInt` is List(Int) but should be Unknown

    let x = e1 in print asInt(x)
        //~^ type of 1 argument of `asInt` is my_e but should be Unknown

    print asInt([1])
    //~^ type of 1 argument of `asInt` is Tuple (Int,) but should be Unknown
        
    program(self) := undef
}
