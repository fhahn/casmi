CASM test

init main

rule main = {
  print BVequal( 0, 1, 2 )
  assert BVequal( 0, 1, 2 ) = 0
  assert BVequal( 0, 0, 1 ) = 0
  assert BVequal( 0, 1, 1 ) = 1

  assert BVor( 0, 1, 1 ) = 1
  assert BVor( 0, 1, 2 ) = 3
  assert BVor( 0, 8, 1 ) = 9
  assert BVor( 0, 2, 4 ) = 6
  assert BVor( 0, 2, 8 ) = 10

  // assert BVnegate( 2, 14 ) = -2
  // assert BVnegate( 2, 15 ) = -3
  // assert BVnegate( 3, 15 ) = -7

  assert BVmir_if( 0, 1, 2, 3 ) = 2
  assert BVmir_if( 0, 9, 2, 3 ) = 2
  assert BVmir_if( 0, 0, 2, 3 ) = 3

  //assert BVshift( 4, 1, 0, 1, 1 ) = 2
  //assert BVshift( 4, 1, 0, 2, 1 ) = 4

  program( self ) := undef
}
