CASM const_prop

init exec

function _z : -> Int

enum alpha = {A, B, C}

rule exec =
{|
    _z := 10

    print "hallo " + A

    print "hallo " + A

    print "hallo " + B

    program(self) := @foo

    let x = 20 in
    {
        print 123

        print 0x123

        print 123
        
        program(self) := @foo
        
        print 0x123

        print 0x123
    
        print x
    }

    print B
    
    program(self) := @foo
    
    print "hallo " + "hallo "
    
    program(self) := undef
|}

rule func(x : Int, y : Int) =
{
    print x + y
}

rule foo =
{
    debuginfo bar "bar "
}