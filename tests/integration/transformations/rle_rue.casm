// transform, cmdline "--frle"

CASM rle

init baz

function qux : -> Int initially { 0 }

function bar : -> Int initially { 1 }

function zab : -> RuleRef initially { @foo }

rule foo =
{|
    {
        bar := (2 * bar) + 1
    }
    
    {
        bar := bar - (bar / 2)
    }
|}

rule baz = 
{
    call ( zab )

    qux := qux + 1
        
    if qux > 0xaffff then
    {
        print qux
        print bar
        print qux
        program(self) := undef
    }
}
