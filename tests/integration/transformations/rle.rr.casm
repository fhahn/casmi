// transform, cmdline "--frle --frr"

CASM rle_and_rr


init case_00

function qux : Int -> Int initially { 2 -> 0xdead }

rule case_00 =
{|
    print "case: 00"
    
    forall i in [2 .. 22] do
    {
        let instr = i*2 in
        {
            print qux(instr)

            print ".." + qux(instr)

            print "...." + qux(instr)
        }
    }
|}

rule case_01 =
{|
    print "case: 01"

    forall i in [3 .. 23] do
    {
        let instr = i*2 in
        {|
            qux(instr) := (i*i*i) / 0xdeadbabe
            
            print ">>" + qux(instr)

            print ">>>>" + qux(instr)
        |}
    }
|}
